<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Termo de Cessão, Guarda, Uso e Devolução de Equipamento</title>
    <style>
        @media print {
            @page {
                size: A4 portrait;
                margin: 10mm;
            }
            html, body {
                width: 100%;
                height: 100%;
                margin: 0;
                padding: 0;
                background-color: #ffffff;
                font-size: 8pt;
                line-height: 1.2;
            }
            .email-button, #loadingScreen, #successMessage, .user-info-header, .sign-button,
            .signature-pad-container, .signature-actions, .signature-warning {
                display: none;
            }
            .container {
                width: 100%;
                box-shadow: none;
                border: none;
                padding: 0;
                margin: 0;
                box-sizing: border-box;
            }
            .page-break {
                page-break-before: always;
            }
            .header-container {
                display: flex;
                align-items: center;
                margin-bottom: 5px;
                padding: 0;
            }
            .header-image {
                text-align: left;
                margin: 0;
                padding: 0;
                width: 80px;
            }
            .header-image img {
                height: 30px;
                width: auto;
            }
            .header-title {
                flex-grow: 1;
                text-align: center;
                margin: 0;
                padding: 0;
                color: #1B4D3E;
                font-size: 10pt;
                font-weight: bold;
                line-height: 1.1;
            }
            .section-title {
                padding: 2px 0;
                font-size: 8pt;
                margin-top: 3px;
                margin-bottom: 0;
            }
            table {
                margin-bottom: 3px;
                font-size: 8pt;
            }
            th, td {
                padding: 2px 3px;
            }
            .identification-table td,
            .equipment-table th,
            .equipment-table td,
            .declaration-table td {
                height: auto;
                line-height: 1.2;
            }
            .rules-section {
                font-size: 8pt;
                margin-top: 3px;
                padding-left: 5px;
            }
            .rules-section ul {
                margin-top: 3px;
                margin-bottom: 3px;
                padding-left: 0;
            }
            .rules-section li {
                margin-bottom: 2px;
                padding-left: 5px;
            }
            .date-time-placeholder {
                margin-top: 3px;
                font-size: 8pt;
            }
            .signature-section {
                display: flex;
                justify-content: center;
                align-items: center;
                flex-direction: column;
                margin-top: 10px;
                text-align: center;
            }
        .signature-line {
    border-bottom: 1px solid #333; /* */
    height: 80px; /* */
    width: 300px; /* */
    margin: 10px auto 3px auto; /* Margem simplificada */
    
    /* Propriedades para alinhamentoo */
    display: flex;
    justify-content: center; /* Centraliza horizontalmente */
    align-items: flex-end;   /* Alinha o item na parte inferior */
}
            .signature-label {
                font-size: 7pt;
                text-align: center;
                margin-bottom: 10px;
            }
            .checkbox {
                width: 6px; height: 6px; margin-right: 1px;
            }
            .checkbox-label {
                margin-left: 1px; margin-right: 3px;
            }
            .internal-info {
                padding-top: 5px;
                font-size: 8pt;
                margin-top: 5px;
            }
            .internal-info span {
                margin-top: 0;
            }
            .footer-info {
                font-size: 7pt;
                margin-top: 3px;
            }
            .additional-terms {
                font-size: 8pt;
                margin-top: 10px;
                padding: 5px;
                text-align: justify;
                line-height: 1.3;
            }
            .additional-terms ol {
                padding-left: 15px;
            }
            .additional-terms li {
                margin-bottom: 5px;
            }
            .signature-image {
                height: 80px;
                max-width: 300px;
                margin: 0 auto;
                display: block;
            }
        }

        /* Estilos para visualização normal (não impressão) */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
            color: #333;
            font-size: 9pt;
        }
        .container {
            width: 100%;
            max-width: 210mm;
            margin: 20px auto;
            background: white;
            padding: 10mm;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            box-sizing: border-box;
            position: relative;
        }
        .header-container {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }
        .header-image {
            text-align: left;
            margin: 0;
            padding: 0;
            width: 100px;
        }
        .header-image img {
            height: 40px;
            width: auto;
        }
        .header-title {
            flex-grow: 1;
            text-align: center;
            margin: 0;
            padding: 0;
            color: #1B4D3E;
            font-size: 12pt;
            font-weight: bold;
            line-height: 1.2;
        }
        .section-title {
            background-color: #E6E7E8;
            font-weight: bold;
            text-align: center;
            padding: 2px 0;
            font-size: 8pt;
            border: 1px solid #B3B3B3;
            margin-top: 5px;
            margin-bottom: 0;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 5px;
            font-size: 8pt;
            border: 1px solid #B3B3B3;
        }
        th, td {
            border: 1px solid #B3B3B3;
            padding: 2px 4px;
            text-align: left;
            vertical-align: top;
        }
        th {
            background-color: #E6E7E8;
            font-weight: bold;
            text-align: center;
        }
        .identification-table td {
             height: 16px;
        }
        .equipment-table th {
             height: 18px;
        }
        .equipment-table td {
             height: 16px;
             vertical-align: middle;
        }
        .declaration-table td {
            height: 16px;
        }
        .label {
            font-weight: bold;
            padding-right: 4px;
        }
        .rules-section {
            font-size: 8pt;
            margin-top: 3px;
            padding-left: 10px;
            text-align: justify;
        }
        .rules-section ul {
            list-style-type: none;
            padding-left: 0;
            margin-top: 3px;
        }
        .rules-section li {
            margin-bottom: 3px;
            position: relative;
            padding-left: 10px;
        }
        .rules-section li::before {
            content: "–";
            position: absolute;
            left: 0;
            top: 0;
        }
        .signature-section {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            margin-top: 15px;
            text-align: center;
        }
        .signature-line {
            border-bottom: 1px solid #333;
            height: 80px;
            margin-top: 10px;
            margin-bottom: 3px;
            position: relative;
            width: 300px;
            margin-left: auto;
            margin-right: auto;
        }
        .signature-label {
            font-size: 8pt;
            text-align: center;
            margin-top: 5px;
            margin-bottom: 15px;
        }
        .checkbox-label {
            margin-left: 3px;
            margin-right: 10px;
        }
        .checkbox {
             width: 8px;
             height: 8px;
             border: 1px solid #333;
             display: inline-block;
             margin-right: 2px;
             vertical-align: middle;
        }
        .internal-info {
            text-align: center;
            font-weight: bold;
            padding-top: 10px;
            font-size: 8pt;
            border-top: 1px solid #B3B3B3;
            margin-top: 10px;
        }
        .internal-info span {
            display: block;
            margin-top: 2px;
            font-weight: normal;
        }
        .footer-info {
            display: flex;
            justify-content: space-between;
            font-size: 7pt;
            margin-top: 5px;
            color: #555;
        }
        .date-time-placeholder {
             text-align: center;
             margin-top: 5px;
             font-size: 8pt;
             color: #555;
        }
        .user-info-header {
            text-align: right;
            font-size: 9pt;
            margin-bottom: 5px;
            font-weight: bold;
            color: #555;
        }
        .email-button {
            background-color: #007bff;
            color: white;
            text-align: center;
            padding: 10px 20px;
            font-size: 14px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            z-index: 100;
        }
        .email-button:hover {
            background-color: #0056b3;
        }
        .sign-button {
            background-color: #28a745;
            color: white;
            padding: 5px 10px;
            font-size: 10px;
            border: none;
            border-radius: 3px;
            cursor: pointer;
            margin-left: 5px;
        }
        .sign-button:hover {
            background-color: #218838;
        }
        .additional-terms {
            font-size: 8pt;
            margin-top: 15px;
            padding: 10px;
            border: 1px solid #B3B3B3;
            text-align: justify;
            line-height: 1.4;
        }
        .additional-terms ol {
            padding-left: 20px;
        }
        .additional-terms li {
            margin-bottom: 8px;
        }
        .page-break {
            page-break-before: always;
            margin-top: 30px;
        }
        #loadingScreen, #successMessage {
            position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.7); display: flex; flex-direction: column; justify-content: center; align-items: center; z-index: 9999; display: none; text-align: center; color: white;
        }
        #loadingLogo { width: 150px; animation: spin 6s linear infinite; }
        @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
        #loadingText { margin-top: 20px; font-size: 18px; }
        #progressBar { width: 80%; height: 10px; background-color: #ddd; border-radius: 5px; margin-top: 20px; overflow: hidden; }
        #progress { height: 100%; width: 0; background-color: #28a745; transition: width 0.3s; }
        #percentage { font-size: 20px; margin-top: 10px; }
        #successMessage { background-color: white; color: #007bff; padding: 20px; border-radius: 8px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); }
        #successLogo { max-width: 100px; margin-bottom: 10px; }
        .error-message {
            background-color: #f8d7da;
            color: #721c24;
            padding: 10px;
            border-radius: 4px;
            margin-bottom: 15px;
            border: 1px solid #f5c6cb;
        }
        .signature-warning {
            background-color: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 5px;
            padding: 15px;
            margin: 20px auto;
            max-width: 600px;
            text-align: center;
            color: #856404;
            font-weight: bold;
        }
        .email-button:disabled {
            background-color: #6c757d !important;
            cursor: not-allowed !important;
            opacity: 0.6;
        }
        .email-button:disabled:hover {
            background-color: #6c757d !important;
        }
        /* Estilos melhorados para a área de assinatura */
        .signature-pad-container {
    margin: 30px auto 15px; /* Aumenta a margem superior para 30px */
    text-align: center; /* */
    width: 100%; /* */
    max-width: 550px; /* Aumenta a largura máxima para 550px */
}
        .signature-pad {
            border: 1px solid #ccc;
            border-radius: 4px;
            margin-bottom: 10px;
            background-color: #f8f9fa;
            touch-action: none;
        }
      canvas {
    background-color: #f8f9fa; /* */
    width: 100% !important; /* */
    height: 100px !important; /* Diminui a altura para 100px */
    display: block; /* */
}
      #userSignature, #userSignature2 {
    height: 80px; /* */
    width: 300px; /* */
    margin: 10px auto; /* */
    background-size: contain; /* */
    background-repeat: no-repeat; /* */
    background-position: center bottom; /* Alinha a imagem de fundo na parte inferior */
    border-bottom: 1px solid #333; /* */
    position: relative; /* */
}
        .signature-actions {
            display: flex;
            gap: 10px;
            justify-content: center;
            margin-top: 10px;
        }
        .clear-button, .save-button {
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 10px;
        }
        .clear-button {
            background-color: #f8f9fa;
            border: 1px solid #ccc;
        }
        .save-button {
            background-color: #28a745;
            color: white;
        }
        .signature-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.7);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }
        .signature-modal-content {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            width: 80%;
            max-width: 500px;
        }
        .signature-modal-title {
            font-weight: bold;
            margin-bottom: 15px;
            text-align: center;
        }
        .signature-modal-buttons {
            display: flex;
            justify-content: space-between;
            margin-top: 15px;
        }
        .signature-agreement {
            margin: 10px 0;
            font-size: 10pt;
            text-align: center;
        }
        .signature-agreement input {
            margin-right: 5px;
        }
    </style>
</head>
<body>

    <div class="user-info-header">
        Usuário logado: <span id="loggedUser"><%= typeof usuario !== 'undefined' ? usuario : 'N/A' %></span>
    </div>

    <% if (typeof fileReadError !== 'undefined' && fileReadError) { %>
    <div class="error-message">
        <%= fileReadError %>
    </div>
    <% } %>

    <div class="container" id="content">
        <div>
            <div class="header-container">
                <div class="header-image">
                  <img src="<%= typeof logoDataUri !== 'undefined' && logoDataUri ? logoDataUri : '/img/gpk.png' %>" alt="GPK Logo">
                </div>
                <div class="header-title">
                    FORMULÁRIO<br>
                    TERMO DE CESSÃO, GUARDA, USO E DEVOLUÇÃO DE EQUIPAMENTO
                </div>
                <div style="width: 80px;"></div>
            </div>

            <div class="section-title">DADOS DE IDENTIFICAÇÃO</div>
            <table class="identification-table">
                <tr>
                    <td style="width: 50%;"><span class="label">Nome:</span> <%= typeof nome !== 'undefined' ? nome : 'N/A' %></td>
                    <td style="width: 25%;"><span class="label">Unidade de Negócio:</span> <%= typeof unidade !== 'undefined' ? unidade : 'N/A' %></td>
                    <td style="width: 25%;"><span class="label">Razão Social (se PJ):</span> <% if (tipoUsuario === 'Prestador de Serviços') { %><%= typeof cnpj !== 'undefined' ? cnpj : 'N/A' %><% } else { %> N/A <% } %></td>
                </tr>
                <tr>
                    <td>
                        <span class="label">CPF:</span> 
                        <% if (tipoUsuario === 'Colaborador') { %>
                            <%= typeof cpf !== 'undefined' ? cpf : 'N/A' %>
                        <% } else { %>
                            N/A 
                        <% } %>
                    </td>
                    <td><span class="label">Área/Diretoria:</span> <%= typeof setor !== 'undefined' ? setor : 'N/A' %></td>
                    <td><span class="label">Telefone:</span> <%= typeof telefone !== 'undefined' ? telefone : '' %></td>
                </tr>
                <tr>
                    <td colspan="3"><span class="label">E-mail:</span> <%= typeof email !== 'undefined' ? email : '' %></td>
                </tr>
            </table>

            <div class="section-title">IDENTIFICAÇÃO DO(S) EQUIPAMENTO(S)</div>
            <table class="equipment-table">
                <thead>
                    <tr>
                        <th style="width: 5%;">Item</th>
                        <th style="width: 30%;">Descritivo</th>
                        <th style="width: 15%;">Marca</th>
                        <th style="width: 15%;">Modelo</th>
                        <th style="width: 15%;">Serial</th>
                        <th style="width: 10%;">Uso<br><span style="font-size: 6pt; font-weight: normal;">(P/T)</span></th>
                        <th style="width: 10%;">Visto usuário</th>
                    </tr>
                </thead>
                <tbody>
                    <% let itemCounter = 0; %>
                    <% if (typeof parsedUserData !== 'undefined' && parsedUserData.equipamentos && parsedUserData.equipamentos.length > 0) { %>
                        <% parsedUserData.equipamentos.forEach((equip, index) => { %>
                            <% 
                                const isMonitor = equip.descritivo && equip.descritivo.toLowerCase().includes('monitor');
                                const isUnknownModel = equip.modelo && equip.modelo.toLowerCase().includes('desconhecido');
                                
                                if (!(isMonitor && isUnknownModel)) { 
                            %>
                                <% itemCounter++; %>
                                <tr>
                                    <td style="text-align: center;"><%= itemCounter %></td>
                                    <td><%= equip.descritivo || 'N/A' %></td>
                                    <td><%= equip.fabricante || 'N/A' %></td>
                                    <td><%= equip.modelo || 'N/A' %></td>
                                    <td><%= equip.numeroSerie || 'N/A' %></td>
                                    <td style="text-align: center;"><%= typeof tipoUso !== 'undefined' ? tipoUso : 'P' %></td>
                                    <td style="text-align: center;"><%= typeof nome !== 'undefined' ? nome : 'N/A' %></td>
                                </tr>
                            <% } %>
                        <% }); %>
                    <% } %>
                    
                    <% if (parsedUserData.fonte && (parsedUserData.fonte.fabricante || parsedUserData.fonte.modelo)) { %>
                        <% itemCounter++; %>
                        <tr>
                            <td style="text-align: center;"><%= itemCounter %></td>
                            <td><%= parsedUserData.fonte.descritivo || 'fonte' %></td>
                            <td><%= parsedUserData.fonte.fabricante || 'N/A' %></td>
                            <td><%= parsedUserData.fonte.modelo || 'N/A' %></td>
                            <td>N/A</td>
                            <td style="text-align: center;"><%= typeof tipoUso !== 'undefined' ? tipoUso : 'P' %></td>
                            <td style="text-align: center;"><%= typeof nome !== 'undefined' ? nome : 'N/A' %></td>
                        </tr>
                    <% } %>
                    
                    <% if (itemCounter === 0) { %>
                        <tr>
                            <td colspan="7" style="text-align: center;">Nenhum equipamento externo encontrado para este usuário.</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>

            <div class="section-title">REGRAS, RESPONSABILIDADES E DECLARAÇÃO DE CESSÃO DE USO</div>
            <div style="border: 1px solid #B3B3B3; border-top: none; padding: 3px;">
                <div class="rules-section">
                    Eu, <strong><%= typeof nome !== 'undefined' ? nome : 'N/A' %></strong>, declaro que recebi nesta data o(s) equipamento(s) acima citado(s) em perfeitas condições de uso, estou ciente de minhas responsabilidades e declaro ter conhecimento que:
                    <ul>
                        <li>A utilização do(s) equipamento(s) recebido(s) é exclusiva para exercício das atividades profissionais e que devo zelar pela guarda e conservação deles;</li>
                        <li>Caso o equipamento necessite de reparos, devo abrir chamado para o help desk, via ITCS – Portal TI;</li>
                        <li>Quando for necessária a substituição do equipamento (temporário ou efetivo), a identificação do novo equipamento deve ser registrada neste Termo e novamente coletada as assinaturas;</li>
                        <li>Em caso de desligamento o equipamento deve ser devolvido à área de TI até a data de desligamento. Quando houver transferência entre Unidades de Negócio, o usuário deve devolver o equipamento e solicitar novo equipamento para TI a ser registrado no novo local de trabalho;</li>
                        <li>Em caso de perda ou dano irreparável, é responsabilidade do usuário restituir o valor correspondente ao equipamento, levando em consideração o tempo e a depreciação dele.</li>
                    </ul>
                </div>

                <div class="date-time-placeholder">
                    Gerado em: <%= new Date().toLocaleDateString('pt-BR') %>, <%= new Date().toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' }) %>
                </div>

                <div class="signature-section">
                    <div class="signature-line"><%= typeof assinatura1 !== 'undefined' ? assinatura1 : "Gramado Parks-T.I" %></div>
                    <div class="signature-label">Responsável pela Entrega (nome/assinatura)</div>
                    
                   <div class="signature-line" id="userSignature">
    <% if (typeof assinatura2 !== 'undefined' && assinatura2.startsWith('data:image')) { %>
      <img src="<%= assinatura2 %>" alt="Assinatura do Usuário" style="position: absolute; bottom: 0; left: 50%; transform: translateX(-50%); max-height: 75px; max-width: 100%;">
    <% } else if (typeof assinatura2 !== 'undefined') { %>
        <%= assinatura2 %>
    <% } %>
</div>
<div class="signature-label">
    Assinatura Usuário/Responsável Equipamento(s)
</div>
                    
                    <div class="signature-pad-container">
                        <div class="signature-pad">
                            <canvas id="signatureCanvas1"></canvas>
                        </div>
                        <div class="signature-actions">
                            <button class="clear-button" onclick="clearSignature(1)">Limpar</button>
                            <button class="save-button" onclick="saveSignature(1)">Salvar Assinatura</button>
                        </div>
                    </div>
                </div>

                <div class="section-title">DECLARAÇÃO DE DEVOLUÇÃO</div>
                <div style="border: 1px solid #B3B3B3; border-top: none; padding: 3px;">
                    Por gentileza, eu, __________________________________________________________________________, declaro que o(s) equipamento(s) sob a minha guarda foi(foram) devolvido(s) nas seguintes condições:
                    <table class="declaration-table" style="margin-top: 3px;">
                        <thead>
                            <tr>
                                <th style="width: 5%;">Item</th>
                                <th style="width: 45%;">Situação</th>
                                <th style="width: 30%;">Descrição do Estado/Situação do Equipamento</th>
                                <th style="width: 10%;">Data</th>
                                <th style="width: 10%;">Visto usuário</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% let returnItemCounter = 0; %>
                            <% if (typeof parsedUserData !== 'undefined' && parsedUserData.equipamentos && parsedUserData.equipamentos.length > 0) { %>
                                <% parsedUserData.equipamentos.forEach((equip, index) => { %>
                                    <% 
                                        const isMonitor = equip.descritivo && equip.descritivo.toLowerCase().includes('monitor');
                                        const isUnknownModel = equip.modelo && equip.modelo.toLowerCase().includes('desconhecido');
                                        
                                        if (!(isMonitor && isUnknownModel)) { 
                                    %>
                                        <% returnItemCounter++; %>
                                        <tr>
                                            <td style="text-align: center;"><%= returnItemCounter %></td>
                                            <td>
                                                <span class="checkbox"></span><span class="checkbox-label">Em perfeito estado</span>
                                                <span class="checkbox"></span><span class="checkbox-label">Apresentando defeito</span>
                                                <span class="checkbox"></span><span class="checkbox-label">Faltando peças ou acessórios</span>
                                            </td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                    <% } %>
                                <% }); %>
                            <% } %>
                            
                            <% if (parsedUserData.fonte) { %>
                                <% returnItemCounter++; %>
                                <tr>
                                    <td style="text-align: center;"><%= returnItemCounter %></td>
                                    <td>
                                        <span class="checkbox"></span><span class="checkbox-label">Em perfeito estado</span>
                                        <span class="checkbox"></span><span class="checkbox-label">Apresentando defeito</span>
                                        <span class="checkbox"></span><span class="checkbox-label">Faltando peças ou acessórios</span>
                                    </td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                            <% } %>
                            
                            <% if (returnItemCounter === 0) { %>
                                <tr>
                                    <td colspan="5" style="text-align: center;">Nenhum equipamento externo listado para devolução.</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="page-break">
                <div class="header-container">
                    <div class="header-image">
                        <img src="/img/gpk.png" alt="GPK Logo">
                    </div>
                    <div class="header-title">
                        FORMULÁRIO<br>
                        TERMO DE CESSÃO, GUARDA, USO E DEVOLUÇÃO DE EQUIPAMENTO
                    </div>
                    <div style="width: 80px;"></div>
                </div>

                <div class="section-title">TERMOS E CONDIÇÕES ADICIONAIS</div>
                <div class="additional-terms">
                    <p><strong>Declaro ter ciência e estar de acordo com os procedimentos descritos na Política PL.GC.028 Trabalho Remoto - Home Office e PL.GC.035 Entrega, Uso e Devolução de Equipamentos de TI e Periféricos, emitidas e divulgadas pela Gramado Parks, comprometendo-me a respeitá-las, cumprindo e aceitando-as plenamente, bem como o disposto abaixo:</strong></p>
                    
                    <ol>
                        <li>Estou ciente de que o equipamento fornecido é de propriedade da empresa que o forneceu; portanto, será utilizado por mim única e exclusivamente a título de empréstimo para o melhor desempenho e execução das atividades para as quais fui contratado, não tendo em hipótese alguma conotação de uso pessoal.</li>
                        
                        <li>Devo utilizá-lo com cuidado, mantê-lo e guardá-lo em local seguro, além de garantir a utilização adequada e, no caso de equipamentos de TI, o uso das ferramentas de criptografia, antivírus e proteção, visando assegurar que as informações nele contidas não sejam divulgadas, nem tenham destinação diversa dos objetivos da Companhia, responsabilizando-me civilmente pela eventual divulgação indevida destas informações, nos termos da lei.</li>
                        
                        <li>Se os equipamentos forem danificados ou inutilizados por emprego inadequado, mau uso, negligência ou extravio, deverei comunicar imediatamente a área competente. A Companhia me fornecerá novo(s) equipamento(s) e cobrará o valor do(s) equipamento(s) da mesma marca ou equivalentes.</li>
                        
                        <li>Devo utilizar somente os softwares instalados e homologados pela área de Tecnologia da Informação (TI) da Gramado Parks, não removendo, alterando ou acrescentando, sem autorização expressa desta, qualquer tipo de dispositivo periférico ou software neste equipamento. Todos os softwares contidos neste são devidamente licenciados e é proibida a sua distribuição ou cópia sem prévia autorização. Qualquer outro software que venha a ser necessário para o exercício de minhas atividades deve ser aprovado e instalado pela área de TI.</li>
                        
                        <li>São expressamente proibidos a: criação, download, guarda ou veiculação de material de cunho pornográfico e/ou imoral, discriminatório, ofensivo, contra a ética e os bons costumes, no equipamento fornecido.</li>
                        
                        <li>Diante do exposto acima, reconheço que a Companhia, dentro de suas atribuições independentemente de aviso, está autorizada a:
                            <ul style="margin-top: 5px;">
                                <li>monitorar, registrar e analisar todas as aplicações e dados localizados no equipamento que foram acessados através de minha senha;</li>
                                <li>modificar e/ou bloquear os acessos sempre que houver necessidade e a critério desta;</li>
                                <li>verificar todos os arquivos contidos no equipamento a qualquer momento.</li>
                            </ul>
                        </li>
                        
                        <li>Estou ciente que este termo terá validade a partir de sua assinatura e permanecerá válido enquanto meu contrato com a Gramado Parks estiver vigente.</li>
                        
                        <li>O descumprimento das obrigações assumidas neste compromisso caracterizará grave infração, resultando em ações disciplinares aplicáveis, como medidas administrativas e/ou disciplinares no âmbito da Companhia, sujeitando-me à reparação pelos danos causados, sendo facultado à Companha a adoção de medidas pertinentes, incluindo as de natureza indenizatória, em valor equivalente ou substituição (idêntico ou similar).</li>
                        
                        <li>Reconheço que em caso de desligamento ou rescisão de contrato devo devolver o equipamento para o líder da área em que atuo/ presto serviço no prazo em até 1 (um) dia. Saliento que fui informado que caso o equipamento não seja entregue neste prazo, o valor do equipamento na data de desligamento/ rescisão será descontado das minhas verbas rescisórias ou da NF em caso de Prestador de Serviços.</li>
                    </ol>
                </div>

                <div class="signature-section" style="margin-top: 30px;">
                    <div class="signature-line"><%= typeof assinatura3 !== 'undefined' ? assinatura3 : "Gramado Parks-T.I" %></div>
                    <div class="signature-label">Responsável pela Entrega (nome/assinatura)</div>
                    
                  <div class="signature-line" id="userSignature2">
    <% if (typeof assinatura4 !== 'undefined' && assinatura4.startsWith('data:image')) { %>
     <img src="<%= assinatura4 %>" alt="Assinatura do Usuário" style="position: absolute; bottom: 0; left: 50%; transform: translateX(-50%); max-height: 75px; max-width: 100%;">
    <% } else if (typeof assinatura4 !== 'undefined') { %>
        <%= assinatura4 %>
    <% } %>
</div>
<div class="signature-label">
    Assinatura Usuário/Responsável Equipamento(s)
</div>
                    
                    <div class="signature-pad-container">
                        <div class="signature-pad">
                            <canvas id="signatureCanvas2"></canvas>
                        </div>
                        <div class="signature-actions">
                            <button class="clear-button" onclick="clearSignature(2)">Limpar</button>
                            <button class="save-button" onclick="saveSignature(2)">Salvar Assinatura</button>
                        </div>
                    </div>
                </div>
            </div>

            <div style="margin-top: auto;">
                <div class="internal-info">
                    INTERNO
                    <span>As informações contidas neste documento são destinadas ao uso interno.</span>
                </div>
                <div class="footer-info">
                    <span>Página 1/2</span>
                    <span>FR.14.01.001<br>Versão 05 – 11/08/2023</span>
                </div>
            </div>

           <% if (typeof isPdfGeneration === 'undefined' || !isPdfGeneration) { %>
    <% if (typeof userDataBlock !== 'undefined' && userDataBlock) { %>
    <div class="raw-data-block" id="rawDataBlock">
        <%= userDataBlock %>
    </div>
    <% } %>
<% } %>
        </div>

        <!-- Modal para aceite de termos -->
        <div id="signatureModal" class="signature-modal">
            <div class="signature-modal-content">
                <div class="signature-modal-title">Termo de Aceite</div>
                <p>Eu, <strong><%= typeof nome !== 'undefined' ? nome : 'N/A' %></strong>, declaro que li e compreendi todos os termos deste documento e que minha assinatura abaixo tem o mesmo valor legal que uma assinatura manuscrita.</p>
                <div class="signature-agreement">
                    <input type="checkbox" id="agreeTerms"> <label for="agreeTerms">Concordo com os termos acima</label>
                </div>
                <div class="signature-modal-buttons">
                    <button class="clear-button" onclick="document.getElementById('signatureModal').style.display = 'none'">Cancelar</button>
                    <button class="save-button" id="confirmSignatureBtn" disabled>Confirmar Assinatura</button>
                </div>
            </div>
        </div>
<% if (typeof isPdfGeneration === 'undefined' || !isPdfGeneration) { %>
    <div class="signature-warning" id="signatureWarning">
        ⚠️ <strong>ATENÇÃO:</strong> Para enviar o termo por e-mail, é obrigatório que ambas as partes assinem o documento.<br>
        <small style="font-weight: normal; margin-top: 5px; display: block;">
            • O <strong>Colaborador/Prestador de Serviço</strong> deve assinar nas duas páginas<br>
           <!-- • O <strong>Usuário/Responsável pelo Equipamento</strong> deve assinar na segunda página<br>-->
            <em>Apenas após ambas as assinaturas o botão de envio será habilitado.</em>
        </small>
    </div>
<% } %>

        <button class="email-button" id="sendEmailButton" onclick="sendEmail()" disabled>
            Enviar Termo por E-mail
        </button>

        <div id="loadingScreen">
            <img src="/LogoEfeito.png" alt="Logo girando" id="loadingLogo">
            <div id="loadingText">Enviando documento...</div>
            <div id="progressBar"><div id="progress"></div></div>
            <div id="percentage">0%</div>
        </div>

        <div id="successMessage">
            Documento enviado com sucesso!
        </div>

        <div id="errorMessage">
            Erro ao enviar documento!
        </div>

        <script>
            // Variáveis para controle da assinatura
            let isDrawing = false;
            let lastX = 0;
            let lastY = 0;
            let currentCanvas = null;
            let currentCtx = null;
            
         const signatureSettings = {
    lineWidth: 1.5, // Linha um pouco mais grossa
    lineCap: 'round',
    lineJoin: 'round',
    strokeStyle: '#004A99'
};
            // Inicializa os canvases de assinatura
            document.addEventListener('DOMContentLoaded', function() {
                const canvas1 = document.getElementById('signatureCanvas1');
                const ctx1 = canvas1.getContext('2d');
                setupCanvas(canvas1, ctx1);
                
                const canvas2 = document.getElementById('signatureCanvas2');
                const ctx2 = canvas2.getContext('2d');
                setupCanvas(canvas2, ctx2);
                
                // Configura o modal de aceite
                document.getElementById('agreeTerms').addEventListener('change', function() {
                    document.getElementById('confirmSignatureBtn').disabled = !this.checked;
                });
                
                checkSignatures();
                
                // Ajusta o tamanho do canvas para alta resolução
                resizeCanvas(canvas1);
                resizeCanvas(canvas2);
            });

            function resizeCanvas(canvas) {
                const ratio = window.devicePixelRatio || 1;
                canvas.width = canvas.offsetWidth * ratio;
                canvas.height = canvas.offsetHeight * ratio;
                canvas.getContext('2d').scale(ratio, ratio);
            }

     // Função setupCanvas SIMPLIFICADA
function setupCanvas(canvas, ctx) {
    // Adiciona os listeners, as configurações foram movidas
    canvas.addEventListener('mousedown', startDrawing);
    canvas.addEventListener('mousemove', draw);
    canvas.addEventListener('mouseup', stopDrawing);
    canvas.addEventListener('mouseout', stopDrawing);
    
    canvas.addEventListener('touchstart', handleTouchStart, { passive: false });
    canvas.addEventListener('touchmove', handleTouchMove, { passive: false });
    canvas.addEventListener('touchend', handleTouchEnd);
}
// Função startDrawing NOVA
// Função startDrawing CORRIGIDA
// Função startDrawing CORRIGIDA com as configurações
function startDrawing(e) {
    isDrawing = true;
    const canvas = e.target;
    const rect = canvas.getBoundingClientRect();
    currentCanvas = canvas;
    currentCtx = canvas.getContext('2d');

    // ** APLICA AS CONFIGURAÇÕES AQUI **
    currentCtx.strokeStyle = signatureSettings.strokeStyle;
    currentCtx.lineWidth = signatureSettings.lineWidth;
    currentCtx.lineCap = signatureSettings.lineCap;
    currentCtx.lineJoin = signatureSettings.lineJoin;

    if (e.type === 'mousedown') {
        [lastX, lastY] = [e.clientX - rect.left, e.clientY - rect.top];
    } else if (e.type === 'touchstart') {
        e.preventDefault();
        [lastX, lastY] = [e.touches[0].clientX - rect.left, e.touches[0].clientY - rect.top];
    }
    
    currentCtx.beginPath();
    currentCtx.moveTo(lastX, lastY);
}

// Função draw CORRIGIDA
function draw(e) {
    if (!isDrawing) return;
    const rect = currentCanvas.getBoundingClientRect();
    let currentX, currentY;

    if (e.type === 'mousemove') {
        currentX = e.clientX - rect.left;
        currentY = e.clientY - rect.top;
    } else if (e.type === 'touchmove') {
        e.preventDefault();
        currentX = e.touches[0].clientX - rect.top;
    }

    //  Desenhar no caminho já iniciado
    currentCtx.lineTo(currentX, currentY);
    currentCtx.stroke();

    [lastX, lastY] = [currentX, currentY];
}

// Função draw NOVA (com curvas)
function draw(e) {
    if (!isDrawing) return;
    const rect = currentCanvas.getBoundingClientRect();
    let currentX, currentY;

    if (e.type === 'mousemove') {
        currentX = e.clientX - rect.left;
        currentY = e.clientY - rect.top;
    } else if (e.type === 'touchmove') {
        e.preventDefault();
        currentX = e.touches[0].clientX - rect.top;
    }

    //  Desenhar no caminho já iniciado
    currentCtx.lineTo(currentX, currentY);
    currentCtx.stroke();

    [lastX, lastY] = [currentX, currentY];
}

            function stopDrawing() {
                isDrawing = false;
            }

            // Funções para touch devices
            function handleTouchStart(e) {
                if (e.touches.length === 1) {
                    const touch = e.touches[0];
                    const mouseEvent = new MouseEvent('mousedown', {
                        clientX: touch.clientX,
                        clientY: touch.clientY
                    });
                    e.target.dispatchEvent(mouseEvent);
                }
            }

            function handleTouchMove(e) {
                if (e.touches.length === 1) {
                    const touch = e.touches[0];
                    const mouseEvent = new MouseEvent('mousemove', {
                        clientX: touch.clientX,
                        clientY: touch.clientY
                    });
                    e.target.dispatchEvent(mouseEvent);
                }
            }

            function handleTouchEnd(e) {
                const mouseEvent = new MouseEvent('mouseup', {});
                e.target.dispatchEvent(mouseEvent);
            }

            function clearSignature(pageNum) {
                const canvas = pageNum === 1 ? document.getElementById('signatureCanvas1') : document.getElementById('signatureCanvas2');
                const ctx = canvas.getContext('2d');
                
                ctx.clearRect(0, 0, canvas.width, canvas.height);
                
                // Atualiza o estado da assinatura
                const signatureElement = pageNum === 1 ? 
                    document.getElementById('userSignature') : 
                    document.getElementById('userSignature2');
                signatureElement.style.backgroundImage = 'none';
                signatureElement.textContent = '';
                
                checkSignatures();
            }

            function saveSignature(pageNum) {
                const canvas = pageNum === 1 ? document.getElementById('signatureCanvas1') : document.getElementById('signatureCanvas2');
                
                // Verifica se há alguma assinatura no canvas
                const blankCanvas = document.createElement('canvas');
                blankCanvas.width = canvas.width;
                blankCanvas.height = canvas.height;
                
                if (canvas.toDataURL() === blankCanvas.toDataURL()) {
                    alert('Por favor, forneça sua assinatura antes de salvar.');
                    return;
                }
                
                // Mostra o modal de aceite
                document.getElementById('signatureModal').style.display = 'flex';
                document.getElementById('agreeTerms').checked = false;
                document.getElementById('confirmSignatureBtn').disabled = true;
                
                // Configura o botão de confirmação
                document.getElementById('confirmSignatureBtn').onclick = function() {
                    confirmSignature(pageNum, canvas);
                    document.getElementById('signatureModal').style.display = 'none';
                };
            }

            function confirmSignature(pageNum, canvas) {
                const signatureElement = pageNum === 1 ? 
                    document.getElementById('userSignature') : 
                    document.getElementById('userSignature2');
                
                // Converte a assinatura para imagem e exibe no lugar apropriado
                const signatureDataUrl = canvas.toDataURL();
                signatureElement.style.backgroundImage = `url(${signatureDataUrl})`;
                signatureElement.textContent = '';
                
                // Adiciona metadados para verificação
                const userName = '<%= typeof nome !== "undefined" ? nome : "N/A" %>';
                const currentDate = new Date().toLocaleDateString('pt-BR');
                const currentTime = new Date().toLocaleTimeString('pt-BR');
                signatureElement.setAttribute('data-signed-by', userName);
                signatureElement.setAttribute('data-signed-at', `${currentDate} ${currentTime}`);
                
                checkSignatures();
            }

            function checkSignatures() {
                const signature1 = document.getElementById('userSignature');
                const signature2 = document.getElementById('userSignature2');
                const sendButton = document.getElementById('sendEmailButton');
                const warningDiv = document.getElementById('signatureWarning');
                
                const isSignature1Valid = signature1.style.backgroundImage !== 'none' && 
                                        signature1.style.backgroundImage !== '';
                const isSignature2Valid = signature2.style.backgroundImage !== 'none' && 
                                        signature2.style.backgroundImage !== '';
                
                if (isSignature1Valid && isSignature2Valid) {
                    sendButton.disabled = false;
                    sendButton.style.backgroundColor = '#007bff';
                    sendButton.style.cursor = 'pointer';
                    warningDiv.style.display = 'none';
                } else {
                    sendButton.disabled = true;
                    sendButton.style.backgroundColor = '#6c757d';
                    sendButton.style.cursor = 'not-allowed';
                    warningDiv.style.display = 'block';
                }
            }

            function sendEmail() {
                // Verificar assinaturas
                const signature1 = document.getElementById('userSignature');
                const signature2 = document.getElementById('userSignature2');
                
                const isSignature1Valid = signature1.style.backgroundImage !== 'none' && 
                                        signature1.style.backgroundImage !== '';
                const isSignature2Valid = signature2.style.backgroundImage !== 'none' && 
                                        signature2.style.backgroundImage !== '';
                
                if (!isSignature1Valid || !isSignature2Valid) {
                    alert('⚠️ ATENÇÃO: É obrigatório que ambas as partes assinem o documento antes de enviar o e-mail.');
                    return;
                }
                
                const loadingScreen = document.getElementById('loadingScreen');
                const successMessage = document.getElementById('successMessage');
                const errorMessage = document.getElementById('errorMessage');
                
                loadingScreen.style.display = 'flex';
                successMessage.style.display = 'none';
                errorMessage.style.display = 'none';
                
                let progress = 0;
                const progressElement = document.getElementById('progress');
                const percentageElement = document.getElementById('percentage');

                // Obter as assinaturas como dados base64
                const canvas1 = document.getElementById('signatureCanvas1');
                const canvas2 = document.getElementById('signatureCanvas2');
                const signatureData1 = canvas1.toDataURL();
                const signatureData2 = canvas2.toDataURL();

                // Coletar todas as informações do formulário
                const formData = {
                    nome: '<%= typeof nome !== "undefined" ? nome : "" %>',
                    unidade: '<%= typeof unidade !== "undefined" ? unidade : "" %>',
                    setor: '<%= typeof setor !== "undefined" ? setor : "" %>',
                    email: '<%= typeof email !== "undefined" ? email : "" %>',
                    usuario: '<%= typeof usuario !== "undefined" ? usuario : "" %>',
                    telefone: '<%= typeof telefone !== "undefined" ? telefone : "" %>',
                    cpf: '<%= typeof cpf !== "undefined" ? cpf : "" %>',
                    rg: '<%= typeof rg !== "undefined" ? rg : "" %>',
                    cnpj: '<%= typeof cnpj !== "undefined" ? cnpj : "" %>',
                    tipoUsuario: '<%= typeof tipoUsuario !== "undefined" ? tipoUsuario : "" %>',
                    tipoUso: '<%= typeof tipoUso !== "undefined" ? tipoUso : "P" %>',
                    assinatura1: document.querySelector('.signature-section .signature-line:first-child').textContent,
                    assinatura2: signatureData1,
                    assinatura3: document.querySelector('.page-break .signature-section .signature-line:first-child').textContent,
                    assinatura4: signatureData2,
                    dataAssinatura1: document.getElementById('userSignature').getAttribute('data-signed-at') || '',
                    dataAssinatura2: document.getElementById('userSignature2').getAttribute('data-signed-at') || ''
                };

                function updateProgress() {
                    if (progress < 100) {
                        progress += 1;
                        progressElement.style.width = progress + '%';
                        percentageElement.textContent = progress + '%';
                        setTimeout(updateProgress, 30);
                    }
                }
                updateProgress();

                fetch('/enviar-email', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                })
                .then(response => {
                    if (response.ok) {
                        return response.text();
                    } else {
                        throw new Error('Erro no servidor: ' + response.status);
                    }
                })
                .then(data => {
                    progress = 100;
                    progressElement.style.width = '100%';
                    percentageElement.textContent = '100%';
                    
                    setTimeout(() => {
                        loadingScreen.style.display = 'none';
                        successMessage.style.display = 'block';
                        
                        setTimeout(() => {
                            successMessage.style.display = 'none';
                        }, 5000);
                    }, 1000);
                })
                .catch(error => {
                    console.error('Erro ao enviar e-mail:', error);
                    loadingScreen.style.display = 'none';
                    errorMessage.style.display = 'block';
                    
                    setTimeout(() => {
                        errorMessage.style.display = 'none';
                    }, 5000);
                });
            }
        </script>
    </div>
</body>
</html>