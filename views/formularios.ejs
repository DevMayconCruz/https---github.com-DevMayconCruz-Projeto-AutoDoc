<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Termo de Cessão, Guarda, Uso e Devolução de Equipamento</title>
    <style>
        @media print {
            @page {
                size: A4 portrait;
                margin: 10mm;
            }
            html, body {
                width: 100%;
                height: 100%;
                margin: 0;
                padding: 0;
                background-color: #ffffff;
                font-size: 8pt;
                line-height: 1.2;
            }
            .email-button, #loadingScreen, #successMessage, .user-info-header, .sign-button,
            .signature-pad-container, .signature-actions, .signature-warning, .docusign-container {
                display: none;
            }
            .container {
                width: 100%;
                box-shadow: none;
                border: none;
                padding: 0;
                margin: 0;
                box-sizing: border-box;
            }
            .page-break {
                page-break-before: always;
            }
            .header-container {
                display: flex;
                align-items: center;
                margin-bottom: 5px;
                padding: 0;
            }
            .header-image {
                text-align: left;
                margin: 0;
                padding: 0;
                width: 80px;
            }
            .header-image img {
                height: 30px;
                width: auto;
            }
            .header-title {
                flex-grow: 1;
                text-align: center;
                margin: 0;
                padding: 0;
                color: #1B4D3E;
                font-size: 10pt;
                font-weight: bold;
                line-height: 1.1;
            }
            .section-title {
                padding: 2px 0;
                font-size: 8pt;
                margin-top: 3px;
                margin-bottom: 0;
            }
            table {
                margin-bottom: 3px;
                font-size: 8pt;
            }
            th, td {
                padding: 2px 3px;
            }
            .identification-table td,
            .equipment-table th,
            .equipment-table td,
            .declaration-table td {
                height: auto;
                line-height: 1.2;
            }
            .rules-section {
                font-size: 8pt;
                margin-top: 3px;
                padding-left: 5px;
            }
            .rules-section ul {
                margin-top: 3px;
                margin-bottom: 3px;
                padding-left: 0;
            }
            .rules-section li {
                margin-bottom: 2px;
                padding-left: 5px;
            }
            .date-time-placeholder {
                margin-top: 3px;
                font-size: 8pt;
            }
            .signature-section {
                display: flex;
                justify-content: center;
                align-items: center;
                flex-direction: column;
                margin-top: 10px;
                text-align: center;
            }
            .signature-line {
                border-bottom: 1px solid #333;
                height: 80px;
                width: 300px;
                margin: 10px auto 3px auto;
                display: flex;
                justify-content: center;
                align-items: flex-end;
                background-size: contain;
                background-repeat: no-repeat;
                background-position: center bottom;
            }
            .signature-label {
                font-size: 7pt;
                text-align: center;
                margin-bottom: 10px;
            }
            .checkbox {
                width: 6px; height: 6px; margin-right: 1px;
            }
            .checkbox-label {
                margin-left: 1px; margin-right: 3px;
            }
            .internal-info {
                padding-top: 5px;
                font-size: 8pt;
                margin-top: 5px;
            }
            .internal-info span {
                margin-top: 0;
            }
            .footer-info {
                font-size: 7pt;
                margin-top: 3px;
            }
            .additional-terms {
                font-size: 8pt;
                margin-top: 10px;
                padding: 5px;
                text-align: justify;
                line-height: 1.3;
            }
            .additional-terms ol {
                padding-left: 15px;
            }
            .additional-terms li {
                margin-bottom: 5px;
            }
            .signature-image {
                height: 80px;
                max-width: 300px;
                margin: 0 auto;
                display: block;
            }
        }

        /* Estilos para visualização normal (não impressão) */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
            color: #333;
            font-size: 9pt;
        }
        .container {
            width: 100%;
            max-width: 210mm;
            margin: 20px auto;
            background: white;
            padding: 10mm;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            box-sizing: border-box;
            position: relative;
        }
        .header-container {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }
        .header-image {
            text-align: left;
            margin: 0;
            padding: 0;
            width: 100px;
        }
        .header-image img {
            height: 40px;
            width: auto;
        }
        .header-title {
            flex-grow: 1;
            text-align: center;
            margin: 0;
            padding: 0;
            color: #1B4D3E;
            font-size: 12pt;
            font-weight: bold;
            line-height: 1.2;
        }
        .section-title {
            background-color: #E6E7E8;
            font-weight: bold;
            text-align: center;
            padding: 2px 0;
            font-size: 8pt;
            border: 1px solid #B3B3B3;
            margin-top: 5px;
            margin-bottom: 0;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 5px;
            font-size: 8pt;
            border: 1px solid #B3B3B3;
        }
        th, td {
            border: 1px solid #B3B3B3;
            padding: 2px 4px;
            text-align: left;
            vertical-align: top;
        }
        th {
            background-color: #E6E7E8;
            font-weight: bold;
            text-align: center;
        }
        .identification-table td {
             height: 16px;
        }
        .equipment-table th {
             height: 18px;
        }
        .equipment-table td {
             height: 16px;
             vertical-align: middle;
        }
        .declaration-table td {
            height: 16px;
        }
        .label {
            font-weight: bold;
            padding-right: 4px;
        }
        .rules-section {
            font-size: 8pt;
            margin-top: 3px;
            padding-left: 10px;
            text-align: justify;
        }
        .rules-section ul {
            list-style-type: none;
            padding-left: 0;
            margin-top: 3px;
        }
        .rules-section li {
            margin-bottom: 3px;
            position: relative;
            padding-left: 10px;
        }
        .rules-section li::before {
            content: "–";
            position: absolute;
            left: 0;
            top: 0;
        }
        .signature-section {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            margin-top: 15px;
            text-align: center;
        }
        .signature-line {
            border-bottom: 1px solid #333;
            height: 80px;
            margin-top: 10px;
            margin-bottom: 3px;
            position: relative;
            width: 300px;
            margin-left: auto;
            margin-right: auto;
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center bottom;
        }
        .signature-label {
            font-size: 8pt;
            text-align: center;
            margin-top: 5px;
            margin-bottom: 15px;
        }
        .checkbox-label {
            margin-left: 3px;
            margin-right: 10px;
        }
        .checkbox {
             width: 8px;
             height: 8px;
             border: 1px solid #333;
             display: inline-block;
             margin-right: 2px;
             vertical-align: middle;
        }
        .internal-info {
            text-align: center;
            font-weight: bold;
            padding-top: 10px;
            font-size: 8pt;
            border-top: 1px solid #B3B3B3;
            margin-top: 10px;
        }
        .internal-info span {
            display: block;
            margin-top: 2px;
            font-weight: normal;
        }
        .footer-info {
            display: flex;
            justify-content: space-between;
            font-size: 7pt;
            margin-top: 5px;
            color: #555;
        }
        .date-time-placeholder {
             text-align: center;
             margin-top: 5px;
             font-size: 8pt;
             color: #555;
        }
        .user-info-header {
            text-align: right;
            font-size: 9pt;
            margin-bottom: 5px;
            font-weight: bold;
            color: #555;
        }
        .email-button {
            background-color: #007bff;
            color: white;
            text-align: center;
            padding: 10px 20px;
            font-size: 14px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            z-index: 100;
        }
        .email-button:hover {
            background-color: #0056b3;
        }
        .additional-terms {
            font-size: 8pt;
            margin-top: 15px;
            padding: 10px;
            border: 1px solid #B3B3B3;
            text-align: justify;
            line-height: 1.4;
        }
        .additional-terms ol {
            padding-left: 20px;
        }
        .additional-terms li {
            margin-bottom: 8px;
        }
        .page-break {
            page-break-before: always;
            margin-top: 30px;
        }
        #loadingScreen, #successMessage {
            position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.7); display: flex; flex-direction: column; justify-content: center; align-items: center; z-index: 9999; display: none; text-align: center; color: white;
        }
        #loadingLogo { width: 150px; animation: spin 6s linear infinite; }
        @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
        #loadingText { margin-top: 20px; font-size: 18px; }
        #progressBar { width: 80%; height: 10px; background-color: #ddd; border-radius: 5px; margin-top: 20px; overflow: hidden; }
        #progress { height: 100%; width: 0; background-color: #28a745; transition: width 0.3s; }
        #percentage { font-size: 20px; margin-top: 10px; }
        #successMessage { background-color: white; color: #007bff; padding: 20px; border-radius: 8px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); }
        #successLogo { max-width: 100px; margin-bottom: 10px; }
        .error-message {
            background-color: #f8d7da;
            color: #721c24;
            padding: 10px;
            border-radius: 4px;
            margin-bottom: 15px;
            border: 1px solid #f5c6cb;
        }
        .signature-warning {
            background-color: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 5px;
            padding: 15px;
            margin: 20px auto;
            max-width: 600px;
            text-align: center;
            color: #856404;
            font-weight: bold;
        }
        .email-button:disabled {
            background-color: #6c757d !important;
            cursor: not-allowed !important;
            opacity: 0.6;
        }
        .email-button:disabled:hover {
            background-color: #6c757d !important;
        }

        /* Estilos DocuSign para assinatura */
        .docusign-container {
            background: linear-gradient(135deg, #e3f2fd 0%, #f8f9fa 100%);
            border: 2px solid #2196f3;
            border-radius: 12px;
            padding: 25px;
            margin: 30px auto;
            max-width: 600px;
            text-align: center;
            box-shadow: 0 4px 12px rgba(33, 150, 243, 0.15);
        }
        .docusign-title {
            color: #1976d2;
            font-size: 18px;
            font-weight: bold;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }
        .docusign-instructions {
            background: #fff;
            border-left: 4px solid #2196f3;
            padding: 15px;
            margin: 20px 0;
            border-radius: 0 8px 8px 0;
            text-align: left;
            font-size: 14px;
            color: #333;
        }
        .signature-field {
            background: #e8f5e8;
            border: 2px dashed #4caf50;
            border-radius: 8px;
            padding: 40px 20px;
            margin: 20px 0;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            min-height: 120px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }
        .signature-field:hover {
            background: #f1f8e9;
            border-color: #388e3c;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(76, 175, 80, 0.2);
        }
        .signature-field.signed {
            background: #e8f5e8;
            border: 2px solid #4caf50;
            cursor: default;
        }
        .signature-field.signed:hover {
            transform: none;
            box-shadow: none;
        }
        .signature-icon {
            font-size: 32px;
            margin-bottom: 10px;
            color: #4caf50;
        }
        .signature-text {
            font-size: 16px;
            font-weight: 600;
            color: #2e7d32;
            margin-bottom: 5px;
        }
        .signature-subtitle {
            font-size: 14px;
            color: #666;
            margin-bottom: 15px;
        }
        .signature-role {
            background: #2196f3;
            color: white;
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        .signature-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.7);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }
        .signature-modal-content {
            background-color: white;
            padding: 30px;
            border-radius: 12px;
            width: 90%;
            max-width: 700px;
            box-shadow: 0 8px 32px rgba(0,0,0,0.3);
            max-height: 90vh;
            overflow-y: auto;
        }
        .signature-modal-title {
            font-weight: bold;
            margin-bottom: 20px;
            text-align: center;
            font-size: 20px;
            color: #1976d2;
        }

        /* Abas de opções de assinatura */
        .signature-tabs {
            display: flex;
            border-bottom: 2px solid #e0e0e0;
            margin-bottom: 20px;
        }
        .signature-tab {
            flex: 1;
            padding: 12px 20px;
            text-align: center;
            cursor: pointer;
            border: none;
            background: none;
            font-size: 14px;
            font-weight: 600;
            color: #666;
            transition: all 0.3s ease;
            border-bottom: 3px solid transparent;
        }
        .signature-tab.active {
            color: #1976d2;
            border-bottom-color: #1976d2;
            background: #f8f9fa;
        }
        .signature-tab:hover {
            background: #f5f5f5;
        }

        /* Conteúdo das abas */
        .tab-content {
            display: none;
            min-height: 300px;
        }
        .tab-content.active {
            display: block;
        }

        /* Aba Selecionar Estilo */
        .style-options {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin: 20px 0;
        }
        .style-option {
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            padding: 20px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            background: #fafafa;
        }
        .style-option:hover {
            border-color: #1976d2;
            background: #f0f8ff;
        }
        .style-option.selected {
            border-color: #1976d2;
            background: #e3f2fd;
        }
        .style-preview {
            font-size: 18px;
            font-weight: bold;
            margin-bottom: 10px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-bottom: 1px solid #333;
            margin-bottom: 15px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
        .style-name {
            font-size: 12px;
            color: #666;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        /* Aba Desenhar */
        .signature-pad-container {
            margin: 20px 0;
            text-align: center;
        }
        .signature-pad {
            border: 2px solid #ddd;
            border-radius: 8px;
            margin-bottom: 15px;
            background-color: #fafafa;
            touch-action: none;
            width: 100%;
            height: 200px;
            position: relative;
        }
        #signatureCanvas {
            background-color: #fafafa;
            width: 100%;
            height: 200px;
            display: block;
            border-radius: 6px;
            cursor: crosshair;
        }

        /* Aba Upload */
        .upload-area {
            border: 2px dashed #1976d2;
            border-radius: 8px;
            padding: 40px 20px;
            text-align: center;
            background: #f8f9fa;
            cursor: pointer;
            transition: all 0.3s ease;
            margin: 20px 0;
        }
        .upload-area:hover {
            background: #e3f2fd;
            border-color: #1565c0;
        }
        .upload-area.dragover {
            background: #e3f2fd;
            border-color: #1565c0;
        }
        .upload-icon {
            font-size: 48px;
            color: #1976d2;
            margin-bottom: 15px;
        }
        .upload-text {
            font-size: 16px;
            color: #333;
            margin-bottom: 10px;
        }
        .upload-subtext {
            font-size: 14px;
            color: #666;
        }
        #fileInput {
            display: none;
        }
        .uploaded-image {
            max-width: 100%;
            max-height: 150px;
            border: 1px solid #ddd;
            border-radius: 4px;
            margin-top: 15px;
        }

        /* Visualização da assinatura */
        .signature-preview {
            background: #f8f9fa;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 20px;
            margin: 20px 0;
            text-align: center;
        }
        .signature-preview-title {
            font-size: 14px;
            color: #666;
            margin-bottom: 15px;
        }
        .signature-preview-content {
            border-bottom: 1px solid #333;
            height: 80px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: white;
            border-radius: 4px;
            overflow: hidden;
        }

        /* Ações do modal */
        .signature-actions {
            display: flex;
            gap: 15px;
            justify-content: center;
            margin-top: 30px;
        }
        .clear-button, .save-button, .cancel-button {
            padding: 12px 24px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        .clear-button {
            background-color: #f5f5f5;
            color: #666;
            border: 2px solid #ddd;
        }
        .clear-button:hover {
            background-color: #e0e0e0;
        }
        .cancel-button {
            background-color: #f44336;
            color: white;
        }
        .cancel-button:hover {
            background-color: #d32f2f;
        }
        .save-button {
            background-color: #4caf50;
            color: white;
        }
        .save-button:hover {
            background-color: #388e3c;
        }
        .save-button:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        .signature-agreement {
            margin: 20px 0;
            font-size: 14px;
            text-align: left;
            background: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            border-left: 4px solid #2196f3;
        }
        .signature-agreement input {
            margin-right: 8px;
            transform: scale(1.2);
        }
    </style>
</head>
<body>

    <div class="user-info-header">
        Usuário logado: <span id="loggedUser"><%= typeof usuario !== 'undefined' ? usuario : 'N/A' %></span>
    </div>

    <% if (typeof fileReadError !== 'undefined' && fileReadError) { %>
    <div class="error-message">
        <%= fileReadError %>
    </div>
    <% } %>

    <div class="container" id="content">
        <div>
            <div class="header-container">
                <div class="header-image">
                  <img src="<%= typeof logoDataUri !== 'undefined' && logoDataUri ? logoDataUri : '/img/gpk.png' %>" alt="GPK Logo">
                </div>
                <div class="header-title">
                    FORMULÁRIO<br>
                    TERMO DE CESSÃO, GUARDA, USO E DEVOLUÇÃO DE EQUIPAMENTO
                </div>
                <div style="width: 80px;"></div>
            </div>

            <div class="section-title">DADOS DE IDENTIFICAÇÃO</div>
            <table class="identification-table">
                <tr>
                    <td style="width: 50%;"><span class="label">Nome:</span> <%= typeof nome !== 'undefined' ? nome : 'N/A' %></td>
                    <td style="width: 25%;"><span class="label">Unidade de Negócio:</span> <%= typeof unidade !== 'undefined' ? unidade : 'N/A' %></td>
                    <td style="width: 25%;"><span class="label">Razão Social (se PJ):</span> <% if (tipoUsuario === 'Prestador de Serviços') { %><%= typeof cnpj !== 'undefined' ? cnpj : 'N/A' %><% } else { %> N/A <% } %></td>
                </tr>
                <tr>
                    <td>
                        <span class="label">CPF:</span> 
                        <% if (tipoUsuario === 'Colaborador') { %>
                            <%= typeof cpf !== 'undefined' ? cpf : 'N/A' %>
                        <% } else { %>
                            N/A 
                        <% } %>
                    </td>
                    <td><span class="label">Área/Diretoria:</span> <%= typeof setor !== 'undefined' ? setor : 'N/A' %></td>
                    <td><span class="label">Telefone:</span> <%= typeof telefone !== 'undefined' ? telefone : '' %></td>
                </tr>
                <tr>
                    <td colspan="3"><span class="label">E-mail:</span> <%= typeof email !== 'undefined' ? email : '' %></td>
                </tr>
            </table>

            <div class="section-title">IDENTIFICAÇÃO DO(S) EQUIPAMENTO(S)</div>
            <table class="equipment-table">
                <thead>
                    <tr>
                        <th style="width: 5%;">Item</th>
                        <th style="width: 30%;">Descritivo</th>
                        <th style="width: 15%;">Marca</th>
                        <th style="width: 15%;">Modelo</th>
                        <th style="width: 15%;">Serial</th>
                        <th style="width: 10%;">Uso<br><span style="font-size: 6pt; font-weight: normal;">(P/T)</span></th>
                        <th style="width: 10%;">Visto usuário</th>
                    </tr>
                </thead>
                <tbody>
                    <% let itemCounter = 0; %>
                    <% if (typeof parsedUserData !== 'undefined' && parsedUserData.equipamentos && parsedUserData.equipamentos.length > 0) { %>
                        <% parsedUserData.equipamentos.forEach((equip, index) => { %>
                            <% 
                                const isMonitor = equip.descritivo && equip.descritivo.toLowerCase().includes('monitor');
                                const isUnknownModel = equip.modelo && equip.modelo.toLowerCase().includes('desconhecido');
                                
                                if (!(isMonitor && isUnknownModel)) { 
                            %>
                                <% itemCounter++; %>
                                <tr>
                                    <td style="text-align: center;"><%= itemCounter %></td>
                                    <td><%= equip.descritivo || 'N/A' %></td>
                                    <td><%= equip.fabricante || 'N/A' %></td>
                                    <td><%= equip.modelo || 'N/A' %></td>
                                    <td><%= equip.numeroSerie || 'N/A' %></td>
                                    <td style="text-align: center;"><%= typeof tipoUso !== 'undefined' ? tipoUso : 'P' %></td>
                                    <td style="text-align: center;"><%= typeof nome !== 'undefined' ? nome : 'N/A' %></td>
                                </tr>
                            <% } %>
                        <% }); %>
                    <% } %>
                    
                    <% if (parsedUserData.fonte && (parsedUserData.fonte.fabricante || parsedUserData.fonte.modelo)) { %>
                        <% itemCounter++; %>
                        <tr>
                            <td style="text-align: center;"><%= itemCounter %></td>
                            <td><%= parsedUserData.fonte.descritivo || 'fonte' %></td>
                            <td><%= parsedUserData.fonte.fabricante || 'N/A' %></td>
                            <td><%= parsedUserData.fonte.modelo || 'N/A' %></td>
                            <td>N/A</td>
                            <td style="text-align: center;"><%= typeof tipoUso !== 'undefined' ? tipoUso : 'P' %></td>
                            <td style="text-align: center;"><%= typeof nome !== 'undefined' ? nome : 'N/A' %></td>
                        </tr>
                    <% } %>
                    
                    <% if (itemCounter === 0) { %>
                        <tr>
                            <td colspan="7" style="text-align: center;">Nenhum equipamento externo encontrado para este usuário.</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>

            <div class="section-title">REGRAS, RESPONSABILIDADES E DECLARAÇÃO DE CESSÃO DE USO</div>
            <div style="border: 1px solid #B3B3B3; border-top: none; padding: 3px;">
                <div class="rules-section">
                    Eu, <strong><%= typeof nome !== 'undefined' ? nome : 'N/A' %></strong>, declaro que recebi nesta data o(s) equipamento(s) acima citado(s) em perfeitas condições de uso, estou ciente de minhas responsabilidades e declaro ter conhecimento que:
                    <ul>
                        <li>A utilização do(s) equipamento(s) recebido(s) é exclusiva para exercício das atividades profissionais e que devo zelar pela guarda e conservação deles;</li>
                        <li>Caso o equipamento necessite de reparos, devo abrir chamado para o help desk, via ITCS – Portal TI;</li>
                        <li>Quando for necessária a substituição do equipamento (temporário ou efetivo), a identificação do novo equipamento deve ser registrada neste Termo e novamente coletada as assinaturas;</li>
                        <li>Em caso de desligamento o equipamento deve ser devolvido à área de TI até a data de desligamento. Quando houver transferência entre Unidades de Negócio, o usuário deve devolver o equipamento e solicitar novo equipamento para TI a ser registrado no novo local de trabalho;</li>
                        <li>Em caso de perda ou dano irreparável, é responsabilidade do usuário restituir o valor correspondente ao equipamento, levando em consideração o tempo e a depreciação dele.</li>
                    </ul>
                </div>

                <div class="date-time-placeholder">
                    Gerado em: <%= new Date().toLocaleDateString('pt-BR') %>, <%= new Date().toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' }) %>
                </div>

                <div class="signature-section">
                    <div class="signature-line">
                        <%= typeof assinatura1 !== 'undefined' ? assinatura1 : "Gramado Parks-T.I" %>
                    </div>
                    <div class="signature-label">Responsável pela Entrega (nome/assinatura)</div>
                    
                    <div class="signature-line" id="userSignature">
                        <% if (typeof assinatura2 !== 'undefined' && assinatura2.startsWith('data:image')) { %>
                            <img src="<%= assinatura2 %>" alt="Assinatura do Usuário" style="position: absolute; bottom: 0; left: 50%; transform: translateX(-50%); max-height: 75px; max-width: 100%;">
                        <% } %>
                    </div>
                    <div class="signature-label">Assinatura Usuário/Responsável Equipamento(s)</div>
                </div>

                <!-- Container DocuSign para assinatura -->
                <% if (typeof isPdfGeneration === 'undefined' || !isPdfGeneration) { %>
                <div class="docusign-container">
                    <div class="docusign-title">
                        ✓ Assinatura Digital - Termo de Adesão
                    </div>
                    
                    <div class="docusign-instructions">
                        📝 <strong>Instruções para Assinatura</strong><br>
                        Clique no campo abaixo para assinar digitalmente este documento. Sua assinatura será salva automaticamente no PDF final.
                    </div>
                    
                    <div class="signature-field" id="signatureField" onclick="openSignatureModal()">
                        <div class="signature-icon">✍️</div>
                        <div class="signature-text">Clique aqui para assinar</div>
                        <div class="signature-subtitle">Colaborador/Prestador de Serviço</div>
                        <div class="signature-role">Colaborador/Prestador de Serviço</div>
                    </div>
                </div>
                <% } %>
            </div>

            <div class="page-break">
                <div class="header-container">
                    <div class="header-image">
                        <img src="<%= typeof logoDataUri !== 'undefined' && logoDataUri ? logoDataUri : '/img/gpk.png' %>" alt="GPK Logo">
                    </div>
                    <div class="header-title">
                        FORMULÁRIO<br>
                        TERMO DE CESSÃO, GUARDA, USO E DEVOLUÇÃO DE EQUIPAMENTO
                    </div>
                    <div style="width: 80px;"></div>
                </div>

                <div class="section-title">DECLARAÇÃO DE DEVOLUÇÃO</div>
                <div style="border: 1px solid #B3B3B3; border-top: none; padding: 3px;">
                    Por gentileza, eu, __________________________________________________________________________, declaro que o(s) equipamento(s) sob a minha guarda foi(foram) devolvido(s) nas seguintes condições:
                    <table class="declaration-table" style="margin-top: 3px;">
                        <thead>
                            <tr>
                                <th style="width: 5%;">Item</th>
                                <th style="width: 45%;">Situação</th>
                                <th style="width: 30%;">Descrição do Estado/Situação do Equipamento</th>
                                <th style="width: 10%;">Data</th>
                                <th style="width: 10%;">Visto usuário</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% let returnItemCounter = 0; %>
                            <% if (typeof parsedUserData !== 'undefined' && parsedUserData.equipamentos && parsedUserData.equipamentos.length > 0) { %>
                                <% parsedUserData.equipamentos.forEach((equip, index) => { %>
                                    <% 
                                        const isMonitor = equip.descritivo && equip.descritivo.toLowerCase().includes('monitor');
                                        const isUnknownModel = equip.modelo && equip.modelo.toLowerCase().includes('desconhecido');
                                        
                                        if (!(isMonitor && isUnknownModel)) { 
                                    %>
                                        <% returnItemCounter++; %>
                                        <tr>
                                            <td style="text-align: center;"><%= returnItemCounter %></td>
                                            <td>
                                                <span class="checkbox"></span><span class="checkbox-label">Em perfeito estado</span>
                                                <span class="checkbox"></span><span class="checkbox-label">Apresentando defeito</span>
                                                <span class="checkbox"></span><span class="checkbox-label">Faltando peças ou acessórios</span>
                                            </td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                    <% } %>
                                <% }); %>
                            <% } %>
                            
                            <% if (parsedUserData.fonte && (parsedUserData.fonte.fabricante || parsedUserData.fonte.modelo)) { %>
                                <% returnItemCounter++; %>
                                <tr>
                                    <td style="text-align: center;"><%= returnItemCounter %></td>
                                    <td>
                                        <span class="checkbox"></span><span class="checkbox-label">Em perfeito estado</span>
                                        <span class="checkbox"></span><span class="checkbox-label">Apresentando defeito</span>
                                        <span class="checkbox"></span><span class="checkbox-label">Faltando peças ou acessórios</span>
                                    </td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                            <% } %>
                            
                            <% if (returnItemCounter === 0) { %>
                                <tr>
                                    <td colspan="5" style="text-align: center;">Nenhum equipamento externo listado para devolução.</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>

                    <div class="signature-section">
                        <div class="signature-line"><%= typeof assinatura3 !== 'undefined' ? assinatura3 : "Gramado Parks-T.I" %></div>
                        <div class="signature-label">Responsável pelo Recebimento (nome/assinatura)</div>
                        
                        <div class="signature-line">
                            <!-- Sem assinatura digital aqui - apenas linha para assinatura manual -->
                        </div>
                        <div class="signature-label">Assinatura Usuário/Responsável Equipamento(s)</div>
                    </div>
                </div>

               <div class="section-title">TERMOS E CONDIÇÕES ADICIONAIS</div>
                <div class="additional-terms">
                    <p><strong>Declaro ter ciência e estar de acordo com os procedimentos descritos na Política PL.GC.028 Trabalho Remoto - Home Office e PL.GC.035 Entrega, Uso e Devolução de Equipamentos de TI e Periféricos, emitidas e divulgadas pela Gramado Parks, comprometendo-me a respeitá-las, cumprindo e aceitando-as plenamente, bem como o disposto abaixo:</strong></p>
                    
                    <ol>
                        <li>Estou ciente de que o equipamento fornecido é de propriedade da empresa que o forneceu; portanto, será utilizado por mim única e exclusivamente a título de empréstimo para o melhor desempenho e execução das atividades para as quais fui contratado, não tendo em hipótese alguma conotação de uso pessoal.</li>
                        
                        <li>Devo utilizá-lo com cuidado, mantê-lo e guardá-lo em local seguro, além de garantir a utilização adequada e, no caso de equipamentos de TI, o uso das ferramentas de criptografia, antivírus e proteção, visando assegurar que as informações nele contidas não sejam divulgadas, nem tenham destinação diversa dos objetivos da Companhia, responsabilizando-me civilmente pela eventual divulgação indevida destas informações, nos termos da lei.</li>
                        
                        <li>Se os equipamentos forem danificados ou inutilizados por emprego inadequado, mau uso, negligência ou extravio, deverei comunicar imediatamente a área competente. A Companhia me fornecerá novo(s) equipamento(s) e cobrará o valor do(s) equipamento(s) da mesma marca ou equivalentes.</li>
                        
                        <li>Devo utilizar somente os softwares instalados e homologados pela área de Tecnologia da Informação (TI) da Gramado Parks, não removendo, alterando ou acrescentando, sem autorização expressa desta, qualquer tipo de dispositivo periférico ou software neste equipamento. Todos os softwares contidos neste são devidamente licenciados e é proibida a sua distribuição ou cópia sem prévia autorização. Qualquer outro software que venha a ser necessário para o exercício de minhas atividades deve ser aprovado e instalado pela área de TI.</li>
                        
                        <li>São expressamente proibidos a: criação, download, guarda ou veiculação de material de cunho pornográfico e/ou imoral, discriminatório, ofensivo, contra a ética e os bons costumes, no equipamento fornecido.</li>
                        
                        <li>Diante do exposto acima, reconheço que a Companhia, dentro de suas atribuições independentemente de aviso, está autorizada a:
                            <ul style="margin-top: 5px;">
                                <li>monitorar, registrar e analisar todas as aplicações e dados localizados no equipamento que foram acessados através de minha senha;</li>
                                <li>modificar e/ou bloquear os acessos sempre que houver necessidade e a critério desta;</li>
                                <li>verificar todos os arquivos contidos no equipamento a qualquer momento.</li>
                            </ul>
                        </li>
                        
                        <li>Estou ciente que este termo terá validade a partir de sua assinatura e permanecerá válido enquanto meu contrato com a Gramado Parks estiver vigente.</li>
                        
                        <li>O descumprimento das obrigações assumidas neste compromisso caracterizará grave infração, resultando em ações disciplinares aplicáveis, como medidas administrativas e/ou disciplinares no âmbito da Companhia, sujeitando-me à reparação pelos danos causados, sendo facultado à Companha a adoção de medidas pertinentes, incluindo as de natureza indenizatória, em valor equivalente ou substituição (idêntico ou similar).</li>
                        
                        <li>Reconheço que em caso de desligamento ou rescisão de contrato devo devolver o equipamento para o líder da área em que atuo/ presto serviço no prazo em até 1 (um) dia. Saliento que fui informado que caso o equipamento não seja entregue neste prazo, o valor do equipamento na data de desligamento/ rescisão será descontado das minhas verbas rescisórias ou da NF em caso de Prestador de Serviços.</li>
                    </ol>
                </div>

                <div class="signature-section">
                    <div class="signature-line"><%= typeof assinatura3 !== 'undefined' ? assinatura3 : "Gramado Parks-T.I" %></div>
                    <div class="signature-label">Responsável pela Entrega (nome/assinatura)</div>
                    
                    <div class="signature-line">
                        <!-- Sem assinatura digital aqui - apenas linha para assinatura manual -->
                    </div>
                    <div class="signature-label">Assinatura Usuário/Responsável Equipamento(s)</div>
                </div>
            </div>

            <div style="margin-top: auto;">
                <div class="internal-info">
                    INTERNO
                    <span>As informações contidas neste documento são destinadas ao uso interno.</span>
                </div>
                <div class="footer-info">
                    <span>Página 2/2</span>
                    <span>FR.14.01.001<br>Versão 05 – 11/08/2023</span>
                </div>
            </div>

           <% if (typeof isPdfGeneration === 'undefined' || !isPdfGeneration) { %>
    <% if (typeof userDataBlock !== 'undefined' && userDataBlock) { %>
    <div class="raw-data-block" id="rawDataBlock">
        <%= userDataBlock %>
    </div>
    <% } %>
<% } %>
        </div>

        <!-- Modal para assinatura DocuSign com 3 opções -->
        <div id="signatureModal" class="signature-modal">
            <div class="signature-modal-content">
                <div class="signature-modal-title">Assinatura Digital</div>
                
                <!-- Abas de opções -->
                <div class="signature-tabs">
                    <button class="signature-tab active" onclick="switchTab(event, 'style')">SELECIONAR ESTILO</button>
                    <button class="signature-tab" onclick="switchTab(event, 'draw')">DESENHAR</button>
                    <button class="signature-tab" onclick="switchTab(event, 'upload')">FAZER UPLOAD</button>
                </div>

                <!-- Conteúdo da aba Selecionar Estilo -->
                <div id="styleTab" class="tab-content active">
                    <div class="style-options">
                        <div class="style-option" data-style="cursive" onclick="selectStyle('cursive')">
                            <div class="style-preview" style="font-family: 'Brush Script MT', cursive; font-size: 16px;"><%= typeof nome !== 'undefined' ? nome : 'Nome' %></div>
                            <div class="style-name">Cursiva</div>
                        </div>
                        <div class="style-option" data-style="elegant" onclick="selectStyle('elegant')">
                            <div class="style-preview" style="font-family: 'Times New Roman', serif; font-style: italic; font-size: 16px;"><%= typeof nome !== 'undefined' ? nome : 'Nome' %></div>
                            <div class="style-name">Elegante</div>
                        </div>
                    </div>
                    <div class="signature-preview">
                        <div class="signature-preview-title">Visualização:</div>
                        <div class="signature-preview-content" id="stylePreview">
                            Selecione um estilo acima
                        </div>
                    </div>
                </div>

                <!-- Conteúdo da aba Desenhar -->
                <div id="drawTab" class="tab-content">
                    <p style="text-align: center; color: #666; margin-bottom: 20px;">Desenhe sua assinatura no campo abaixo:</p>
                    <div class="signature-pad-container">
                        <div class="signature-pad">
                            <canvas id="signatureCanvas" width="600" height="200"></canvas>
                        </div>
                        <button class="clear-button" onclick="clearCanvas()" style="margin-top: 10px;">Limpar</button>
                    </div>
                </div>

                <!-- Conteúdo da aba Upload -->
                <div id="uploadTab" class="tab-content">
                    <div class="upload-area" onclick="document.getElementById('fileInput').click()">
                        <div class="upload-icon">📁</div>
                        <div class="upload-text">Clique para selecionar uma imagem</div>
                        <div class="upload-subtext">ou arraste e solte aqui</div>
                        <div class="upload-subtext" style="margin-top: 10px; font-size: 12px;">Formatos aceitos: PNG, JPG, JPEG</div>
                    </div>
                    <input type="file" id="fileInput" accept="image/*" onchange="handleFileUpload(event)">
                    <div id="uploadPreview" style="text-align: center; margin-top: 20px;"></div>
                </div>
                
                <div class="signature-agreement">
                    <input type="checkbox" id="agreeTerms"> 
                    <label for="agreeTerms">Eu, <strong><%= typeof nome !== 'undefined' ? nome : 'N/A' %></strong>, declaro que li e compreendi todos os termos deste documento e que minha assinatura digital tem o mesmo valor legal que uma assinatura manuscrita.</label>
                </div>
                
                <div class="signature-actions">
                    <button class="cancel-button" onclick="closeSignatureModal()">Cancelar</button>
                    <button class="save-button" id="saveSignatureBtn" onclick="saveSignature()" disabled>Adotar e Rubricar</button>
                </div>
            </div>
        </div>

<% if (typeof isPdfGeneration === 'undefined' || !isPdfGeneration) { %>
    <div class="signature-warning" id="signatureWarning">
        ⚠️ <strong>ATENÇÃO:</strong> Para enviar o termo por e-mail, é obrigatório assinar o documento.<br>
        <small style="font-weight: normal; margin-top: 5px; display: block;">
            • O <strong>Colaborador/Prestador de Serviço</strong> deve assinar o termo de adesão<br>
            <em>Apenas após a assinatura o botão de envio será habilitado.</em>
        </small>
    </div>
<% } %>

        <button class="email-button" id="sendEmailButton" onclick="sendEmail()" disabled>
            📧 Enviar por E-mail
        </button>

        <div id="loadingScreen">
            <img src="/LogoEfeito.png" alt="Logo girando" id="loadingLogo">
            <div id="loadingText">Registrando tudo! Só mais um momento enquanto enviamos seu documento...</div>
            <div id="progressBar"><div id="progress"></div></div>
            <div id="percentage">0%</div>
        </div>

        <div id="successMessage">
            Documento enviado com sucesso!
        </div>

        <div id="errorMessage">
            Erro ao enviar documento!
        </div>

        <script>
            // Variáveis globais
            let currentTab = 'style';
            let selectedStyle = null;
            let signatureData = null;
            let canvas = null;
            let ctx = null;
            let isDrawing = false;
            let lastX = 0;
            let lastY = 0;
            
            const signatureSettings = {
                lineWidth: 3,
                lineCap: 'round',
                lineJoin: 'round',
                strokeStyle: '#1976d2'
            };

            // Inicializa o sistema
            document.addEventListener('DOMContentLoaded', function() {
                canvas = document.getElementById('signatureCanvas');
                if (canvas) {
                    ctx = canvas.getContext('2d');
                    setupCanvas();
                }
                
                // Configura o modal de aceite
                const agreeTerms = document.getElementById('agreeTerms');
                if (agreeTerms) {
                    agreeTerms.addEventListener('change', function() {
                        updateSaveButton();
                    });
                }
                
                // Configura drag and drop para upload
                setupDragAndDrop();
                
                checkSignatures();
            });

            function setupCanvas() {
                if (!canvas || !ctx) return;
                
                // Configurar dimensões do canvas
                const rect = canvas.getBoundingClientRect();
                const dpr = window.devicePixelRatio || 1;
                
                canvas.width = rect.width * dpr;
                canvas.height = rect.height * dpr;
                
                ctx.scale(dpr, dpr);
                
                // Configurar estilos
                ctx.strokeStyle = signatureSettings.strokeStyle;
                ctx.lineWidth = signatureSettings.lineWidth;
                ctx.lineCap = signatureSettings.lineCap;
                ctx.lineJoin = signatureSettings.lineJoin;
                
                // Event listeners para mouse
                canvas.addEventListener('mousedown', startDrawing);
                canvas.addEventListener('mousemove', draw);
                canvas.addEventListener('mouseup', stopDrawing);
                canvas.addEventListener('mouseout', stopDrawing);
                
                // Event listeners para touch
                canvas.addEventListener('touchstart', handleTouchStart, { passive: false });
                canvas.addEventListener('touchmove', handleTouchMove, { passive: false });
                canvas.addEventListener('touchend', handleTouchEnd, { passive: false });
            }

            function setupDragAndDrop() {
                const uploadArea = document.querySelector('.upload-area');
                if (!uploadArea) return;
                
                uploadArea.addEventListener('dragover', function(e) {
                    e.preventDefault();
                    uploadArea.classList.add('dragover');
                });
                
                uploadArea.addEventListener('dragleave', function(e) {
                    e.preventDefault();
                    uploadArea.classList.remove('dragover');
                });
                
                uploadArea.addEventListener('drop', function(e) {
                    e.preventDefault();
                    uploadArea.classList.remove('dragover');
                    
                    const files = e.dataTransfer.files;
                    if (files.length > 0) {
                        handleFile(files[0]);
                    }
                });
            }

            function openSignatureModal() {
                const modal = document.getElementById('signatureModal');
                if (modal) {
                    modal.style.display = 'flex';
                    
                    const agreeTerms = document.getElementById('agreeTerms');
                    if (agreeTerms) {
                        agreeTerms.checked = false;
                    }
                    
                    updateSaveButton();
                    
                    // Reset para a primeira aba
                    switchTab(null, 'style');
                    
                    // Reconfigurar canvas quando modal abrir
                    setTimeout(() => {
                        if (canvas && ctx) {
                            setupCanvas();
                        }
                    }, 100);
                }
            }

            function closeSignatureModal() {
                const modal = document.getElementById('signatureModal');
                if (modal) {
                    modal.style.display = 'none';
                    resetModal();
                }
            }

            function resetModal() {
                selectedStyle = null;
                signatureData = null;
                clearCanvas();
                
                const uploadPreview = document.getElementById('uploadPreview');
                if (uploadPreview) {
                    uploadPreview.innerHTML = '';
                }
                
                const fileInput = document.getElementById('fileInput');
                if (fileInput) {
                    fileInput.value = '';
                }
                
                document.querySelectorAll('.style-option').forEach(opt => opt.classList.remove('selected'));
                
                const stylePreview = document.getElementById('stylePreview');
                if (stylePreview) {
                    stylePreview.textContent = 'Selecione um estilo acima';
                }
            }

            function switchTab(event, tabName) {
                currentTab = tabName;
                
                // Atualizar abas
                document.querySelectorAll('.signature-tab').forEach(tab => tab.classList.remove('active'));
                document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));
                
                // Ativar aba selecionada
                if (event && event.target) {
                    event.target.classList.add('active');
                } else {
                    // Fallback para quando chamado programaticamente
                    const tabs = document.querySelectorAll('.signature-tab');
                    if (tabName === 'style' && tabs[0]) tabs[0].classList.add('active');
                    else if (tabName === 'draw' && tabs[1]) tabs[1].classList.add('active');
                    else if (tabName === 'upload' && tabs[2]) tabs[2].classList.add('active');
                }
                
                const tabContent = document.getElementById(tabName + 'Tab');
                if (tabContent) {
                    tabContent.classList.add('active');
                }
                
                // Reconfigurar canvas se necessário
                if (tabName === 'draw' && canvas && ctx) {
                    setTimeout(() => {
                        setupCanvas();
                    }, 50);
                }
                
                updateSaveButton();
            }

            // Funções da aba Selecionar Estilo
            function selectStyle(style) {
                selectedStyle = style;
                
                // Atualizar seleção visual
                document.querySelectorAll('.style-option').forEach(opt => opt.classList.remove('selected'));
                const selectedOption = document.querySelector(`[data-style="${style}"]`);
                if (selectedOption) {
                    selectedOption.classList.add('selected');
                }
                
                // Gerar preview
                const userName = '<%= typeof nome !== "undefined" ? nome : "Nome" %>';
                const preview = document.getElementById('stylePreview');
                
                if (preview) {
                    if (style === 'cursive') {
                        preview.style.fontFamily = "'Brush Script MT', cursive";
                        preview.style.fontSize = '20px';
                    } else if (style === 'elegant') {
                        preview.style.fontFamily = "'Times New Roman', serif";
                        preview.style.fontStyle = 'italic';
                        preview.style.fontSize = '20px';
                    }
                    
                    preview.textContent = userName;
                }
                
                // Gerar dados da assinatura
                generateStyleSignature(style, userName);
                updateSaveButton();
            }

            function generateStyleSignature(style, name) {
                // Criar canvas temporário para gerar a assinatura
                const tempCanvas = document.createElement('canvas');
                tempCanvas.width = 300;
                tempCanvas.height = 80;
                const tempCtx = tempCanvas.getContext('2d');
                
                // Configurar estilo
                tempCtx.fillStyle = '#1976d2';
                tempCtx.textAlign = 'center';
                tempCtx.textBaseline = 'middle';
                
                if (style === 'cursive') {
                    tempCtx.font = "20px 'Brush Script MT', cursive";
                } else if (style === 'elegant') {
                    tempCtx.font = "italic 20px 'Times New Roman', serif";
                }
                
                // Desenhar o nome
                tempCtx.fillText(name, 150, 40);
                
                // Salvar como dados da assinatura
                signatureData = tempCanvas.toDataURL();
            }

            // Funções da aba Desenhar
            function getEventPos(e) {
                const rect = canvas.getBoundingClientRect();
                const scaleX = canvas.width / rect.width;
                const scaleY = canvas.height / rect.height;
                
                if (e.type.startsWith('touch')) {
                    return {
                        x: (e.touches[0].clientX - rect.left) * scaleX,
                        y: (e.touches[0].clientY - rect.top) * scaleY
                    };
                } else {
                    return {
                        x: (e.clientX - rect.left) * scaleX,
                        y: (e.clientY - rect.top) * scaleY
                    };
                }
            }

            function startDrawing(e) {
                if (!canvas || !ctx) return;
                
                e.preventDefault();
                isDrawing = true;
                
                const pos = getEventPos(e);
                lastX = pos.x;
                lastY = pos.y;
                
                ctx.beginPath();
                ctx.moveTo(lastX, lastY);
                
                updateSaveButton();
            }

            function draw(e) {
                if (!isDrawing || !canvas || !ctx) return;
                
                e.preventDefault();
                
                const pos = getEventPos(e);
                
                ctx.lineTo(pos.x, pos.y);
                ctx.stroke();
                
                lastX = pos.x;
                lastY = pos.y;
            }

            function stopDrawing(e) {
                if (!isDrawing) return;
                
                e.preventDefault();
                isDrawing = false;
                
                if (canvas) {
                    signatureData = canvas.toDataURL();
                }
                
                updateSaveButton();
            }

            function clearCanvas() {
                if (!canvas || !ctx) return;
                
                ctx.clearRect(0, 0, canvas.width, canvas.height);
                signatureData = null;
                updateSaveButton();
            }

            function handleTouchStart(e) {
                e.preventDefault();
                startDrawing(e);
            }

            function handleTouchMove(e) {
                e.preventDefault();
                draw(e);
            }

            function handleTouchEnd(e) {
                e.preventDefault();
                stopDrawing(e);
            }

            // Funções da aba Upload
            function handleFileUpload(event) {
                const file = event.target.files[0];
                if (file) {
                    handleFile(file);
                }
            }

            function handleFile(file) {
                if (!file.type.startsWith('image/')) {
                    alert('Por favor, selecione apenas arquivos de imagem.');
                    return;
                }

                const reader = new FileReader();
                reader.onload = function(e) {
                    const img = new Image();
                    img.onload = function() {
                        // Mostrar preview
                        const preview = document.getElementById('uploadPreview');
                        if (preview) {
                            preview.innerHTML = `<img src="${e.target.result}" class="uploaded-image" alt="Assinatura carregada">`;
                        }
                        
                        // Salvar dados da assinatura
                        signatureData = e.target.result;
                        updateSaveButton();
                    };
                    img.src = e.target.result;
                };
                reader.readAsDataURL(file);
            }

            function updateSaveButton() {
                const agreeTerms = document.getElementById('agreeTerms');
                const saveBtn = document.getElementById('saveSignatureBtn');
                
                if (!agreeTerms || !saveBtn) return;
                
                const agreeChecked = agreeTerms.checked;
                const hasSignature = signatureData !== null || 
                                   (currentTab === 'draw' && !isCanvasEmpty()) ||
                                   (currentTab === 'style' && selectedStyle !== null);
                
                saveBtn.disabled = !agreeChecked || !hasSignature;
            }

            function isCanvasEmpty() {
                if (!canvas) return true;
                
                const blankCanvas = document.createElement('canvas');
                blankCanvas.width = canvas.width;
                blankCanvas.height = canvas.height;
                return canvas.toDataURL() === blankCanvas.toDataURL();
            }

            function saveSignature() {
                // Garantir que temos dados de assinatura
                if (currentTab === 'draw' && !isCanvasEmpty() && canvas) {
                    signatureData = canvas.toDataURL();
                }
                
                if (!signatureData) {
                    alert('Por favor, forneça sua assinatura antes de salvar.');
                    return;
                }
                
                // Atualizar o campo visual
                const signatureField = document.getElementById('signatureField');
                const signatureLine = document.getElementById('userSignature');
                
                if (signatureField) {
                    signatureField.classList.add('signed');
                    signatureField.innerHTML = `
                        <div class="signature-icon">✅</div>
                        <div class="signature-text">Assinado digitalmente</div>
                        <div class="signature-subtitle">Assinatura válida</div>
                        <div class="signature-role">Colaborador/Prestador de Serviço</div>
                    `;
                }
                
                // Atualizar a linha de assinatura no documento
                if (signatureLine) {
                    signatureLine.style.backgroundImage = `url(${signatureData})`;
                    signatureLine.setAttribute('data-signature', signatureData);
                }
                
                closeSignatureModal();
                checkSignatures();
            }

            function checkSignatures() {
                const field = document.getElementById('signatureField');
                const sendButton = document.getElementById('sendEmailButton');
                const warningDiv = document.getElementById('signatureWarning');
                
                if (!field || !sendButton) return;
                
                const isFieldSigned = field.classList.contains('signed');
                
                if (isFieldSigned) {
                    sendButton.disabled = false;
                    sendButton.style.backgroundColor = '#007bff';
                    sendButton.style.cursor = 'pointer';
                    if (warningDiv) warningDiv.style.display = 'none';
                } else {
                    sendButton.disabled = true;
                    sendButton.style.backgroundColor = '#6c757d';
                    sendButton.style.cursor = 'not-allowed';
                    if (warningDiv) warningDiv.style.display = 'block';
                }
            }

            function sendEmail() {
                // Verificar assinatura
                const field = document.getElementById('signatureField');
                
                if (!field || !field.classList.contains('signed')) {
                    alert('⚠️ ATENÇÃO: É obrigatório assinar o documento antes de enviar o e-mail.');
                    return;
                }
                
                const loadingScreen = document.getElementById('loadingScreen');
                const successMessage = document.getElementById('successMessage');
                const errorMessage = document.getElementById('errorMessage');
                
                if (loadingScreen) loadingScreen.style.display = 'flex';
                if (successMessage) successMessage.style.display = 'none';
                if (errorMessage) errorMessage.style.display = 'none';
                
                let progress = 0;
                const progressElement = document.getElementById('progress');
                const percentageElement = document.getElementById('percentage');

                // Obter a assinatura
                const userSignatureLine = document.getElementById('userSignature');
                const userSignature = userSignatureLine ? userSignatureLine.getAttribute('data-signature') : null;

                // Coletar todas as informações do formulário
                const formData = {
                    nome: '<%= typeof nome !== "undefined" ? nome : "" %>',
                    unidade: '<%= typeof unidade !== "undefined" ? unidade : "" %>',
                    setor: '<%= typeof setor !== "undefined" ? setor : "" %>',
                    email: '<%= typeof email !== "undefined" ? email : "" %>',
                    usuario: '<%= typeof usuario !== "undefined" ? usuario : "" %>',
                    telefone: '<%= typeof telefone !== "undefined" ? telefone : "" %>',
                    cpf: '<%= typeof cpf !== "undefined" ? cpf : "" %>',
                    rg: '<%= typeof rg !== "undefined" ? rg : "" %>',
                    cnpj: '<%= typeof cnpj !== "undefined" ? cnpj : "" %>',
                    tipoUsuario: '<%= typeof tipoUsuario !== "undefined" ? tipoUsuario : "" %>',
                    tipoUso: '<%= typeof tipoUso !== "undefined" ? tipoUso : "P" %>',
                    assinatura1: '<%= typeof assinatura1 !== "undefined" ? assinatura1 : "Gramado Parks-T.I" %>',
                    assinatura2: userSignature,
                    assinatura3: '<%= typeof assinatura3 !== "undefined" ? assinatura3 : "Gramado Parks-T.I" %>',
                    assinatura4: '<%= typeof assinatura1 !== "undefined" ? assinatura1 : "Gramado Parks-T.I" %>' // Gestor automático
                };

                // Simular progresso
                const progressInterval = setInterval(() => {
                    progress += Math.random() * 15;
                    if (progress > 90) progress = 90;
                    if (progressElement) progressElement.style.width = progress + '%';
                    if (percentageElement) percentageElement.textContent = Math.round(progress) + '%';
                }, 200);

                // Enviar dados para o servidor
                fetch('/enviar-email', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData)
                })
                .then(response => {
                    clearInterval(progressInterval);
                    if (progressElement) progressElement.style.width = '100%';
                    if (percentageElement) percentageElement.textContent = '100%';
                    
                    setTimeout(() => {
                        if (loadingScreen) loadingScreen.style.display = 'none';
                        if (response.ok) {
                            if (successMessage) {
                                successMessage.style.display = 'flex';
                                setTimeout(() => {
                                    successMessage.style.display = 'none';
                                }, 3000);
                            }
                        } else {
                            if (errorMessage) {
                                errorMessage.style.display = 'flex';
                                setTimeout(() => {
                                    errorMessage.style.display = 'none';
                                }, 3000);
                            }
                        }
                    }, 500);
                })
                .catch(error => {
                    clearInterval(progressInterval);
                    if (loadingScreen) loadingScreen.style.display = 'none';
                    if (errorMessage) {
                        errorMessage.style.display = 'flex';
                        setTimeout(() => {
                            errorMessage.style.display = 'none';
                        }, 3000);
                    }
                    console.error('Erro:', error);
                });
            }
        </script>
    </div>
</body>
</html>

